<Window x:Class="ExcelLab.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ExcelLab"
        xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
        mc:Ignorable="d"
        Title="ExcelLab" Height="450" Width="800">
    <Window.DataContext>
        <local:TableViewModel />
    </Window.DataContext>
    
        <DockPanel>
            <StackPanel DockPanel.Dock="Top">
                <Menu>
                    <MenuItem Header="_File">
                        <MenuItem Header="New" IsCheckable="False"/>
                    </MenuItem>
                </Menu>
                <Border Padding="15">
                    <Border.Background>
                    <SolidColorBrush Color="SeaGreen"/>
                </Border.Background>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3*" />
                        </Grid.ColumnDefinitions>
                        <TextBox Height="24" FontSize="14" VerticalAlignment="Center" Grid.Column="1"
                                 Text="{Binding CurrentCell.Content, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Style.Triggers>
                                        <!-- Add locking text box when CurrentCell is null | maybe with converters? -->
                                        <Trigger></Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </Border>
            </StackPanel>
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <DataGrid RowHeaderWidth="25" LoadingRow="TableDataGrid_OnLoadingRow" RowHeight="30" x:Name="TableDataGrid" SelectionMode="Single" SelectionUnit="Cell" CanUserAddRows="False" CanUserSortColumns="False"  CanUserReorderColumns="False" AutoGenerateColumns="False" ItemsSource="{Binding TableRows}">
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="FontSize" Value="12"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.RowHeaderStyle>
                        <Style TargetType="DataGridRowHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="10 0 0 0"/>
                            <Setter Property="MinHeight" Value="20"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightGray"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowHeaderStyle>
                    <DataGrid.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                         Color="Transparent" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                         Color="Black" />
                    </DataGrid.Resources>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedCellsChanged">
                            <i:InvokeCommandAction PassEventArgsToCommand="True" 
                                                    Command="{Binding SelectCellCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Loaded">
                            <i:InvokeCommandAction PassEventArgsToCommand="True"
                                                   Command="{Binding DataGridLoadedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    
                </DataGrid>
            </ScrollViewer>
        </DockPanel>
    
</Window>
